<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns:webflow="http://www.springframework.org/schema/webflow-config"
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xmlns:mvc="http://www.springframework.org/schema/mvc" 
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:util="http://www.springframework.org/schema/util"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="http://www.springframework.org/schema/webflow-config http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.3.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">
                
                
     <context:property-placeholder location="classpath*:META-INF/spring/*.properties"/>
                
    <!-- The controllers are autodetected POJOs labeled with the @Controller annotation. -->
    <context:component-scan base-package="org.esupportail.nfctag" use-default-filters="false">
        <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
    </context:component-scan>
    
    <!-- Turns on support for mapping requests to Spring MVC @Controller methods
         Also registers default Formatters and Validators for use across all @Controllers -->
    <mvc:annotation-driven conversion-service="applicationConversionService"/>
    

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
    <mvc:resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/>

    <!-- Allows for mapping the DispatcherServlet to "/" by forwarding static resource 
    requests to the container's default Servlet -->
    <mvc:default-servlet-handler/>


    <!-- Selects a static view for rendering without the need for an explicit controller -->
    <mvc:view-controller path="/" view-name="index"/>
    <mvc:view-controller path="/uncaughtException"/>
    <mvc:view-controller path="/resourceNotFound"/>
    <mvc:view-controller path="/dataAccessFailure"/>

    <!-- This bean resolves specific types of exceptions to corresponding logical - view names for error views. 
    The default behaviour of DispatcherServlet - is to propagate all exceptions to the servlet 
    container: this will happen - here with all other types of exceptions. -->
    <bean class="org.esupportail.nfctag.web.LoggingExceptionResolver" p:defaultErrorView="uncaughtException" p:defaultStatusCode="500">
    	<property name="exceptionMappings">
    		<props>
    			<prop key="org.springframework.security.access.AccessDeniedException">accessDenied</prop>
    		</props>
    	</property>
    </bean>

    <!-- Enable this for integration of file upload functionality -->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver"/>

	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
  	</bean>
  
    <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" id="tilesConfigurer">
	    <property name="definitions">
	      <list>
	        <value>/WEB-INF/layouts/layouts.xml</value>
	        <!-- Scan views directory for Tiles configurations -->
	        <value>/WEB-INF/views/**/views.xml</value>
	      </list>
	    </property>
  	</bean>

	<bean class="org.esupportail.nfctag.web.ApplicationConversionServiceFactoryBean" id="applicationConversionService"/>

 <bean id="expressionParser" class="org.springframework.webflow.expression.spel.WebFlowSpringELExpressionParser">
	<constructor-arg>
            <bean class="org.springframework.expression.spel.standard.SpelExpressionParser"/>
	</constructor-arg>
    </bean>

    <bean id="viewFactoryCreator" class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
	<property name="viewResolvers">
       <util:list>
			<ref bean="tilesViewResolver"/>
       </util:list>
	</property>
    </bean>

</beans>
